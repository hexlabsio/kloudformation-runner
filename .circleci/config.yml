version: 2
workflows:
  version: 2
  build-workflow:
    jobs:
      - build:
          context: hexlabs-aws
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          context: hexlabs-aws
jobs:
  build:
    machine:
      enabled: true
    working_directory: ~/kloudformation-runner
    steps:
    - checkout

    - restore_cache:
        keys:
        - gradle-{{ checksum "build.gradle.kts" }}

    - run:
        name: Gradle Build
        command: ./gradlew clean build -DBUILD_NUM=$CIRCLE_BUILD_NUM

    - run:
        name: Gradle Upload
        command: ./gradlew bintrayUpload -DBUILD_NUM=$CIRCLE_BUILD_NUM -DBINTRAY_KEY=$BINTRAY_KEY

    - save_cache:
        paths:
        - ~/.gradle
        key: gradle-{{ checksum "build.gradle.kts" }}

    - run:
        name: Update Version Number in Scripts
        command: awk -v CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM} '{sub(/XXXXX/, CIRCLE_BUILD_NUM)}1' kloudformation.sh > temp.sh && mv temp.sh kloudformation.sh && chmod +x kloudformation.sh

    - run:
        name: Update Kloudformation Version Number
        command: |
          VERSION=`curl -X GET \
            'https://api.bintray.com/packages/hexlabsio/kloudformation/kloudformation/versions/_latest?attribute_values=1' \
            -u chrisbarbour:${BINTRAY_KEY} | python -c "import sys, json; print json.load(sys.stdin)['name']"`; \
          echo Found Latest version of Kloudformation to be $VERSION;\
          awk -v KLOUDFORMATION_VERSION=${VERSION} '{sub(/YYYYY/, KLOUDFORMATION_VERSION)}1' kloudformation.sh > temp.sh && mv temp.sh kloudformation.sh && chmod +x kloudformation.sh

    - run:
        name: Move Jar into kloudformation
        command: mkdir -p ~/.kloudformation && mv build/libs/kloudformation-runner-1.0.${CIRCLE_BUILD_NUM}-uber.jar ~/.kloudformation/kloudformation-runner-1.0.${CIRCLE_BUILD_NUM}-all.jar

    - run:
        name: Authenticate with NPM registry
        command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

    - run:
        name: Update NPM package version
        command: npm --no-git-tag-version version -f 1.0.${CIRCLE_BUILD_NUM}

    - run:
        name: Publish NPM package
        command: npm publish --access public

    - restore_cache:
        keys:
        - kloudformation-{{ checksum "kloudformation.sh" }}

    - run:
        name: Deploy Certificate Stack in US-EAST-1
        command: ./kloudformation.sh deploy -region us-east-1 -stack-name kloudformation-runner-cert -stack-file stack/Stack.kt -stack-class CertInUsEast1 -template cert-stack.yml -m s3@1.1.12 -output certoutputs.txt

    - store_artifacts:
        path: certoutputs.txt

    - run:
        name: Deploy Site Stack in EU-WEST-1
        command: ./kloudformation.sh deploy -region eu-west-1 -stack-name kloudformation-runner-site -stack-file stack/Stack.kt -stack-class Site -template site-stack.yml -m s3@1.1.12 -s us-east-1:kloudformation-runner-cert

    - store_artifacts:
        path: cert-stack.yml

    - store_artifacts:
        path: site-stack.yml

    - save_cache:
        paths:
          - ~/.kloudformation
        key: kloudformation-{{ checksum "kloudformation.sh" }}

    - run:
        name: Move Files
        command: |
          mkdir s3
          mv install-kloudformation.sh s3
          mv kloudformation.sh s3

    - run:
        name: Sync Files with S3
        command: aws s3 sync ./s3 s3://install-kloudformation/